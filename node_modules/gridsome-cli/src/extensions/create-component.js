module.exports = (toolbox) => {
    const {
        print: { success, error },
        template
    } = toolbox;
    
    // async function isReactNative() {
    //     const package = await filesystem.read('package.json', 'json');
    //     return !!package.dependencies['react-native'];
    // }

    async function createComponent(folter, type, name) {
        let templateType = null;

        if (!name) {
            error(`${type} name must be specified`);
            return
        }

        switch (type) {
            case 'page':
                templateType = 'page.js.ejs';
                break;
            case 'layout':
                templateType = 'layout.js.ejs';
                break;
            case 'component':
                templateType = 'component.js.ejs';
                break;
            default:
                error('Component type must be specified')
        }

        const target = `${folter}/${camelize(name)}/index.vue`;

        await template.generate({
            template: templateType,
            target,
            props: { name },
        });

        success(`Generated ${type} with success in ${target}`);
    }

    toolbox.createComponent = createComponent;
};


function camelize (text, separator = "-") {
    return text
      .split(separator)
      .map((w) => w.replace(/./, m => m.toUpperCase()))
      .join('');
}
  